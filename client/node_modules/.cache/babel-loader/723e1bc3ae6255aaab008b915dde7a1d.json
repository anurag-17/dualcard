{"ast":null,"code":"var _jsxFileName = \"D:\\\\authInMern\\\\client\\\\src\\\\component\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [imgdata, setImgdata] = useState({\n    url: \"\",\n    userId: \"\"\n  });\n  const [userId, setUserId] = useState(\"\");\n  const [arr, setArr] = useState([]);\n\n  const uploadImage = async () => {\n    console.log(image);\n    let data = new FormData();\n    let form = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"nftimg\");\n    data.append(\"cloud_name\", \"degu3b9yz\");\n    await fetch(\"https://api.cloudinary.com/v1_1/degu3b9yz/image/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      const imgurl = data.url;\n      setUrl(data.url);\n      imgdata.url = data.url;\n      arr.push(imgurl);\n    }).catch(err => {\n      console.log(err);\n    });\n    const res = await axios.post(\"http://localhost:5000/api/auth/upload\", {\n      url,\n      userId\n    });\n    console.log(res.data);\n  };\n\n  console.log(imgdata);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setImage(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), arr.map((items, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"1000px\",\n              height: \"500px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"30%\"\n              },\n              src: items\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: () => uploadImage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"ivI5V51GQNQemALpNUW6LsiSlq8=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","Col","Row","Dashboard","image","setImage","url","setUrl","imgdata","setImgdata","userId","setUserId","arr","setArr","uploadImage","console","log","data","FormData","form","append","fetch","method","body","then","res","json","imgurl","push","catch","err","post","e","target","files","map","items","index","width","height"],"sources":["D:/authInMern/client/src/component/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from  \"axios\"\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\n\r\n\r\nexport const Dashboard = () => {\r\n\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n    const [imgdata,setImgdata] = useState({\r\n     url:\"\",\r\n     userId:\"\"\r\n    })\r\n    const [userId,setUserId] = useState(\"\")\r\n    const [arr,setArr] = useState([])\r\n\r\n    const uploadImage = async()=>{\r\n        console.log(image)\r\n        let data = new FormData()\r\n        let form = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"nftimg\")\r\n        data.append(\"cloud_name\",\"degu3b9yz\")\r\n        await fetch(\"https://api.cloudinary.com/v1_1/degu3b9yz/image/upload\",{\r\n            method:\"POST\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            const imgurl = data.url\r\n            setUrl(data.url)\r\n            imgdata.url = data.url\r\n            arr.push(imgurl)\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n       const res =  await axios.post(\"http://localhost:5000/api/auth/upload\",{url,userId})\r\n\r\n       console.log(res.data)\r\n\r\n\r\n\r\n    }\r\n\r\nconsole.log(imgdata)\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n<input type= \"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n\r\n{\r\n    arr.map((items,index)=>{\r\n        return(\r\n            <>\r\n            <div style ={{width:\"100%\"}}>\r\n\r\n            <div style = {{width:\"1000px\",height:\"500px\"}}>\r\n\r\n            <img style={{width:\"30%\"}} src = {items}/>\r\n            {/* <button onClick={()=>logoutuser}>logout</button> */}\r\n            </div>\r\n            </div>\r\n\r\n            </>\r\n        )\r\n    })\r\n}\r\n\r\n<input type = \"submit\" onClick={()=>uploadImage()}/>\r\n\r\n\r\n<Card style={{ width: \"30rem\"}}>\r\n        <Card.Body>\r\n\r\n\r\n        </Card.Body>\r\n      </Card>\r\n\r\n    </>\r\n)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}